{"ast":null,"code":"var _jsxFileName = \"/media/siddharth/Stuff/My-Cheat-Day/src/components/Form.js\";\nimport React, { useEffect, useState } from 'react';\nimport Recipe from './Recipe';\nimport Restaurant from './Restaurant';\n\nconst Form = () => {\n  const APP_ID = '2212ac86';\n  const APP_KEY = 'c15684e291aa4073912e4c99dec07227';\n  const [restaurants, setRestaurants] = useState([]);\n  const [recipes, setRecepes] = useState([]);\n  const [search, setSearch] = useState(\"\");\n  const [query, setQuery] = useState('');\n  const [diet, setDiet] = useState(\"\");\n  const [calories, setCalories] = useState(\"\");\n  const [mealtype, setmealtype] = useState(\"\");\n  const [health, sethealth] = useState(\"\");\n  const [cuisine, setcuisine] = useState(\"\");\n  const [excluded, setexcluded] = useState(\"\");\n  const [rest1, setrest1] = useState(\"\");\n  const [rest2, setrest2] = useState(\"\");\n  const [rest3, setrest3] = useState(\"\");\n  var lat = 0;\n  var long = 0;\n\n  function showPosition(position) {\n    lat = position.coords.latitude;\n    long = position.coords.longitude;\n  }\n\n  navigator.geolocation.getCurrentPosition(showPosition);\n  const StyleObject = {\n    \"height\": \"50px\",\n    \"width\": \"150px\"\n  };\n  useEffect(() => {\n    getRecipie();\n  }, [query]);\n\n  const getRecipie = async () => {\n    const response = await fetch(`https://api.edamam.com/search?q=${query}&app_id=${APP_ID}&app_key=${APP_KEY}&from=0&to=5&calories=0-${calories}&meal=${mealtype}&cuisine=${cuisine}&Health=${health}-free&Diet=${diet}&excluded=${excluded}`);\n    const data = await response.json();\n    console.log(data);\n    setRecepes(data.hits);\n  };\n\n  const restClicked = async () => {\n    const restd = await fetch(`https://developers.zomato.com/api/v2.1/search?entity_id=11298&entity_type=city&q=${query}&lat=${lat}&lon=${long}`, {\n      headers: {\n        Accept: \"application/json\",\n        \"User-Key\": \"d45ea1866082729c2bc792dc2a1b4fe3\"\n      }\n    });\n    const restdata = await restd.json();\n    console.log(restdata);\n    setRestaurants(restdata.restaurants);\n  }; //\n  //\n\n\n  const updateSearch = e => {\n    setSearch(e.target.value);\n  };\n\n  const getSearch = e => {\n    e.preventDefault();\n    setQuery(search);\n  };\n\n  return /*#__PURE__*/React.createElement(\"div\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 98,\n      columnNumber: 13\n    }\n  }, /*#__PURE__*/React.createElement(\"form\", {\n    onSubmit: getSearch,\n    className: \"search-form\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 100,\n      columnNumber: 3\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    className: \"form-group\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 104,\n      columnNumber: 1\n    }\n  }, /*#__PURE__*/React.createElement(\"label\", {\n    htmlFor: \"q\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 105,\n      columnNumber: 3\n    }\n  }, \"What is your favorite food: *\"), /*#__PURE__*/React.createElement(\"input\", {\n    type: \"text\",\n    className: \"form-control\",\n    id: \"q\",\n    value: search,\n    onChange: updateSearch,\n    placeholder: \"Enter text\",\n    name: \"q\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 106,\n      columnNumber: 3\n    }\n  })), /*#__PURE__*/React.createElement(\"div\", {\n    className: \"form-group\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 109,\n      columnNumber: 1\n    }\n  }, /*#__PURE__*/React.createElement(\"label\", {\n    htmlFor: \"diet\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 110,\n      columnNumber: 3\n    }\n  }, \"What diet do you need:\"), /*#__PURE__*/React.createElement(\"input\", {\n    type: \"text\",\n    className: \"form-control\",\n    id: \"diet\",\n    placeholder: \"Enter text\",\n    name: \"diet\",\n    value: diet,\n    name: \"diet\",\n    onChange: e => setDiet(e.target.value),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 111,\n      columnNumber: 3\n    }\n  })), /*#__PURE__*/React.createElement(\"div\", {\n    className: \"form-group\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 116,\n      columnNumber: 1\n    }\n  }, /*#__PURE__*/React.createElement(\"label\", {\n    htmlFor: \"health\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 117,\n      columnNumber: 3\n    }\n  }, \"Do you want food to be free of something:\"), /*#__PURE__*/React.createElement(\"input\", {\n    type: \"text\",\n    className: \"form-control\",\n    id: \"health\",\n    placeholder: \"Enter text\",\n    name: \"health\",\n    onChange: e => sethealth(e.target.value),\n    value: health,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 118,\n      columnNumber: 3\n    }\n  })), /*#__PURE__*/React.createElement(\"div\", {\n    className: \"form-group\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 124,\n      columnNumber: 1\n    }\n  }, /*#__PURE__*/React.createElement(\"label\", {\n    htmlFor: \"mealType\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 125,\n      columnNumber: 3\n    }\n  }, \"What is the meal type:\"), /*#__PURE__*/React.createElement(\"input\", {\n    type: \"text\",\n    className: \"form-control\",\n    id: \"mealtype\",\n    placeholder: \"Enter text\",\n    name: \"mealtype\",\n    value: mealtype,\n    onChange: e => setmealtype(e.target.value),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 126,\n      columnNumber: 3\n    }\n  })), /*#__PURE__*/React.createElement(\"div\", {\n    className: \"form-group\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 131,\n      columnNumber: 1\n    }\n  }, /*#__PURE__*/React.createElement(\"label\", {\n    htmlFor: \"cuisineType\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 132,\n      columnNumber: 3\n    }\n  }, \"Any particular cuisine type:\"), /*#__PURE__*/React.createElement(\"input\", {\n    type: \"text\",\n    className: \"form-control\",\n    id: \"cuisineType\",\n    placeholder: \"Enter text\",\n    name: \"cuisineType\",\n    onChange: e => setcuisine(e.target.value),\n    value: cuisine,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 133,\n      columnNumber: 3\n    }\n  })), /*#__PURE__*/React.createElement(\"div\", {\n    className: \"form-group\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 138,\n      columnNumber: 1\n    }\n  }, /*#__PURE__*/React.createElement(\"label\", {\n    htmlFor: \"excluded\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 139,\n      columnNumber: 3\n    }\n  }, \"Do you want to exclude any food:\"), /*#__PURE__*/React.createElement(\"input\", {\n    type: \"text\",\n    className: \"form-control\",\n    id: \"excluded\",\n    placeholder: \"Enter text\",\n    name: \"excluded\",\n    onChange: e => setexcluded(e.target.value),\n    value: excluded,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 140,\n      columnNumber: 3\n    }\n  })), /*#__PURE__*/React.createElement(\"div\", {\n    className: \"form-group\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 145,\n      columnNumber: 1\n    }\n  }, /*#__PURE__*/React.createElement(\"label\", {\n    htmlFor: \"calories\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 146,\n      columnNumber: 3\n    }\n  }, \"Max clories intake:\"), /*#__PURE__*/React.createElement(\"input\", {\n    type: \"number\",\n    className: \"form-control\",\n    id: \"calories\",\n    placeholder: \"Enter number\",\n    name: \"calories\",\n    onChange: e => setCalories(e.target.value),\n    value: calories,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 147,\n      columnNumber: 3\n    }\n  })), /*#__PURE__*/React.createElement(\"div\", {\n    className: \"text-center\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 152,\n      columnNumber: 1\n    }\n  }, /*#__PURE__*/React.createElement(\"button\", {\n    className: \"btn\",\n    type: \"submit\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 153,\n      columnNumber: 1\n    }\n  }, \"Submit\"))), recipes.map(recipe => /*#__PURE__*/React.createElement(Recipe, {\n    key: recipe.recipe.label,\n    title: recipe.recipe.label,\n    calories: recipe.recipe.calories,\n    image: recipe.recipe.image,\n    ingredients: recipe.recipe.ingredients,\n    source: recipe.recipe.source,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 163,\n      columnNumber: 1\n    }\n  })), \";\", /*#__PURE__*/React.createElement(\"button\", {\n    onClick: restClicked,\n    value: \"Restaurents\",\n    className: \"btn\",\n    style: StyleObject,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 177,\n      columnNumber: 1\n    }\n  }, \"Restaurents\"), restaurants.map(restaurant => /*#__PURE__*/React.createElement(Restaurant, {\n    key: restaurant.restaurant.name,\n    title: restaurant.restaurant.name,\n    hlink: restaurant.restaurant.menu_url,\n    phno: restaurant.restaurant.phone_numbers,\n    rating: restaurant.restaurant.user_rating.aggregate_rating,\n    cuisines: restaurant.restaurant.cuisines,\n    address: restaurant.restaurant.location.address,\n    locality_verbose: restaurant.restaurant.location.locality_verbose,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 184,\n      columnNumber: 1\n    }\n  })), \";\");\n};\n\nexport default Form;","map":{"version":3,"sources":["/media/siddharth/Stuff/My-Cheat-Day/src/components/Form.js"],"names":["React","useEffect","useState","Recipe","Restaurant","Form","APP_ID","APP_KEY","restaurants","setRestaurants","recipes","setRecepes","search","setSearch","query","setQuery","diet","setDiet","calories","setCalories","mealtype","setmealtype","health","sethealth","cuisine","setcuisine","excluded","setexcluded","rest1","setrest1","rest2","setrest2","rest3","setrest3","lat","long","showPosition","position","coords","latitude","longitude","navigator","geolocation","getCurrentPosition","StyleObject","getRecipie","response","fetch","data","json","console","log","hits","restClicked","restd","headers","Accept","restdata","updateSearch","e","target","value","getSearch","preventDefault","map","recipe","label","image","ingredients","source","restaurant","name","menu_url","phone_numbers","user_rating","aggregate_rating","cuisines","location","address","locality_verbose"],"mappings":"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","sourcesContent":["import React,{useEffect, useState} from 'react';\nimport Recipe from './Recipe';\nimport Restaurant from './Restaurant';\n\n\n\nconst Form = () =>{\n    const APP_ID = '2212ac86';\n    const APP_KEY = 'c15684e291aa4073912e4c99dec07227';\n  \n      const [restaurants,setRestaurants] = useState([]);\n      const [recipes,setRecepes] = useState([]);\n      const [search, setSearch] = useState(\"\");\n      const [query, setQuery] = useState('');\n      const [diet, setDiet] = useState(\"\");\n      const [calories, setCalories] = useState(\"\");\n      const [mealtype, setmealtype] = useState(\"\");\n      const [health, sethealth] = useState(\"\");\n      const [cuisine, setcuisine] = useState(\"\");\n      const [excluded, setexcluded] = useState(\"\");\n      const [rest1, setrest1] = useState(\"\");\n      const [rest2, setrest2] = useState(\"\");\n      const [rest3, setrest3] = useState(\"\");\n\n      var lat = 0;\n      var long = 0;\n\n      function showPosition(position) {\n        lat =  position.coords.latitude;\n        long = position.coords.longitude;\n      }\n\n      navigator.geolocation.getCurrentPosition(showPosition);\n    \n      \n\n\n    \n\n      const StyleObject = {\n        \n        \"height\" : \"50px\",\n        \"width\" : \"150px\"\n        \n  }\n  \n      useEffect(() => {\n         getRecipie();\n      },[query]);\n  \n      const getRecipie = async () => {\n        const response = await fetch(\n          `https://api.edamam.com/search?q=${query}&app_id=${APP_ID}&app_key=${APP_KEY}&from=0&to=5&calories=0-${calories}&meal=${mealtype}&cuisine=${cuisine}&Health=${health}-free&Diet=${diet}&excluded=${excluded}`\n          \n          );\n        const data  = await response.json();\n        console.log(data);\n        setRecepes(data.hits)\n      }\n\n\n\n      const restClicked = async () => {\n        const restd = await fetch(`https://developers.zomato.com/api/v2.1/search?entity_id=11298&entity_type=city&q=${query}&lat=${lat}&lon=${long}`, {\n          headers: {\n            Accept: \"application/json\",\n            \"User-Key\": \"d45ea1866082729c2bc792dc2a1b4fe3\"\n          }\n        });\n      const restdata  = await restd.json();\n      console.log(restdata);\n      setRestaurants(restdata.restaurants)\n   \n\n \n \n\n      }\n      //\n\n    //\n  \n      const updateSearch = e =>{\n        setSearch(e.target.value)\n      }\n  \n      const getSearch = e => {\n        e.preventDefault();\n        setQuery(search);\n       \n      }\n\n     \n  \n  \n\n \n    return (<div>\n  \n  <form onSubmit={getSearch} className=\"search-form\">\n\n  \n\n<div className=\"form-group\">\n  <label htmlFor=\"q\">What is your favorite food: *</label>\n  <input type=\"text\" className=\"form-control\" id=\"q\"  value={search} onChange={updateSearch} placeholder=\"Enter text\" name=\"q\"  />\n</div>\n\n<div className=\"form-group\">\n  <label htmlFor=\"diet\">What diet do you need:</label>\n  <input type=\"text\" className=\"form-control\" id=\"diet\" placeholder=\"Enter text\"  name=\"diet\"  value={diet} name=\"diet\"\n          onChange={e => setDiet(e.target.value)} \n />\n</div>\n\n<div className=\"form-group\">\n  <label htmlFor=\"health\">Do you want food to be free of something:</label>\n  <input type=\"text\" className=\"form-control\" id=\"health\" placeholder=\"Enter text\" name=\"health\"\n  onChange={e => sethealth(e.target.value)}  value={health}\n/>\n</div>\n\n\n<div className=\"form-group\">\n  <label htmlFor=\"mealType\">What is the meal type:</label>\n  <input type=\"text\" className=\"form-control\" id=\"mealtype\" placeholder=\"Enter text\" name=\"mealtype\"  value={mealtype}\n  onChange={e => setmealtype(e.target.value)}  \n/>\n</div>\n\n<div className=\"form-group\">\n  <label htmlFor=\"cuisineType\">Any particular cuisine type:</label>\n  <input type=\"text\" className=\"form-control\" id=\"cuisineType\" placeholder=\"Enter text\" name=\"cuisineType\"\n   onChange={e => setcuisine(e.target.value)}  value={cuisine}\n/>\n</div>\n\n<div className=\"form-group\">\n  <label htmlFor=\"excluded\">Do you want to exclude any food:</label>\n  <input type=\"text\" className=\"form-control\" id=\"excluded\" placeholder=\"Enter text\" name=\"excluded\"\n    onChange={e => setexcluded(e.target.value)}  value={excluded}\n  />\n</div>\n\n<div className=\"form-group\">\n  <label htmlFor=\"calories\">Max clories intake:</label>\n  <input type=\"number\" className=\"form-control\" id=\"calories\" placeholder=\"Enter number\" name=\"calories\"\n  onChange={e => setCalories(e.target.value)}  value={calories}\n/>\n</div>\n\n<div className=\"text-center\" >\n<button className=\"btn\" type=\"submit\">Submit</button>\n</div>\n</form>\n\n\n\n\n{recipes.map(recipe =>  (\n\n\n<Recipe \nkey={recipe.recipe.label} \n title={recipe.recipe.label} \n calories={recipe.recipe.calories} \n image={recipe.recipe.image}\n ingredients={recipe.recipe.ingredients}\n source={recipe.recipe.source}\n \n />\n\n)\n\n)};\n\n< button onClick={restClicked} value=\"Restaurents\" className=\"btn\"  style={StyleObject}>Restaurents</ button>\n\n{restaurants.map(restaurant =>  (\n\n  \n\n\n<Restaurant \n\n key={restaurant.restaurant.name} \n title={restaurant.restaurant.name} \n hlink = {restaurant.restaurant.menu_url}\n phno = {restaurant.restaurant.phone_numbers} \n rating = {restaurant.restaurant.user_rating.aggregate_rating}\n cuisines = {restaurant.restaurant.cuisines}\n address = {restaurant.restaurant.location.address}\n locality_verbose = {restaurant.restaurant.location.locality_verbose}\n \n />\n\n)\n\n)};\n\n\n\n\n\n\n\n\n\n\n    </div>);\n\n\n\n}\n\n\n\nexport default Form;"]},"metadata":{},"sourceType":"module"}